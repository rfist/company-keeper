basePath: /api
definitions:
  handler.companyRegisterRequest:
    properties:
      description:
        type: string
      name:
        type: string
      numEmployees:
        type: integer
      registered:
        type: boolean
      type:
        type: string
    required:
    - numEmployees
    type: object
  handler.companyResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      numEmployees:
        type: integer
      registered:
        type: boolean
      type:
        type: string
    type: object
  handler.companyUpdateRequest:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      numEmployees:
        type: integer
      registered:
        type: boolean
      type:
        type: string
    required:
    - numEmployees
    type: object
  handler.userLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handler.userRegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  handler.userResponse:
    properties:
      email:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
  utils.Error:
    properties:
      errors:
        additionalProperties: true
        type: object
    type: object
info:
  contact: {}
  description: This is a sample server
  termsOfService: http://swagger.io/terms/
  title: Company Keeper API
  version: "1.0"
paths:
  /company:
    patch:
      consumes:
      - application/json
      description: Register a new company
      operationId: update-company
      parameters:
      - description: Company data for update
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/handler.companyUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.companyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Update a new company
      tags:
      - company
    post:
      consumes:
      - application/json
      description: Register a new company
      operationId: create-company
      parameters:
      - description: Company info for registration
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/handler.companyRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.companyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Register a new company
      tags:
      - company
  /company/{companyId}:
    delete:
      consumes:
      - application/json
      description: Delete company
      operationId: delete-company
      parameters:
      - description: Slug of the article to delete
        in: path
        name: companyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.companyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete company
      tags:
      - company
    get:
      consumes:
      - application/json
      description: Get company info
      operationId: info-company
      parameters:
      - description: Company ID
        in: path
        name: companyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Get company info
      tags:
      - company
  /user:
    get:
      consumes:
      - application/json
      description: Gets the currently logged-in user
      operationId: current-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Get the current user
      tags:
      - user
  /users:
    post:
      consumes:
      - application/json
      description: Register a new user
      operationId: sign-up
      parameters:
      - description: User info for registration
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.userRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Register a new user
      tags:
      - user
  /users/login:
    post:
      consumes:
      - application/json
      description: Login for existing user
      operationId: login
      parameters:
      - description: Credentials to use
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.userLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Login for existing user
      tags:
      - user
swagger: "2.0"
